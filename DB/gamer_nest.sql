-- MySQL Script generated by MySQL Workbench
-- Mon Dec 19 01:45:18 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema gamer_nest
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `gamer_nest` ;

-- -----------------------------------------------------
-- Schema gamer_nest
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gamer_nest` ;
USE `gamer_nest` ;

-- -----------------------------------------------------
-- Table `gamer_nest`.`PlayerType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`PlayerType` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`PlayerType` (
  `idPlayerType` TINYINT NOT NULL,
  `type` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idPlayerType`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Language` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Language` (
  `idLanguage` INT NOT NULL,
  `acronym` CHAR(3) NOT NULL,
  `language` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`idLanguage`),
  UNIQUE INDEX `language_UNIQUE` (`language` ASC) VISIBLE,
  UNIQUE INDEX `acronym_UNIQUE` (`acronym` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Platform` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Platform` (
  `idPlatform` INT NOT NULL AUTO_INCREMENT,
  `platform` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idPlatform`),
  UNIQUE INDEX `platform_UNIQUE` (`platform` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Genre` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Genre` (
  `idGenre` TINYINT NOT NULL,
  `genre` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idGenre`),
  UNIQUE INDEX `genre_UNIQUE` (`genre` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Dev`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Dev` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Dev` (
  `idDev` INT NOT NULL AUTO_INCREMENT,
  `dev` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idDev`),
  UNIQUE INDEX `dev_UNIQUE` (`dev` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Publisher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Publisher` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Publisher` (
  `idPublisher` INT NOT NULL AUTO_INCREMENT,
  `publisher` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idPublisher`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Game` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Game` (
  `idGame` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `subTitle` VARCHAR(50) NOT NULL,
  `description` VARCHAR(1000) NOT NULL,
  `cover` VARCHAR(200) NOT NULL,
  `releaseDate` DATE NOT NULL,
  `score` TINYINT NOT NULL DEFAULT 0,
  `isFav` BINARY NOT NULL DEFAULT 0,
  `approved` BINARY NOT NULL DEFAULT 0,
  `idPlatform` INT NOT NULL,
  `idPublisher` INT NOT NULL,
  `idDev` INT NOT NULL,
  PRIMARY KEY (`idGame`),
  INDEX `fk_Game_Platform_idx` (`idPlatform` ASC) VISIBLE,
  INDEX `fk_Game_Publisher1_idx` (`idPublisher` ASC) VISIBLE,
  INDEX `fk_Game_Dev1_idx` (`idDev` ASC) VISIBLE,
  CONSTRAINT `fk_Game_Platform`
    FOREIGN KEY (`idPlatform`)
    REFERENCES `gamer_nest`.`Platform` (`idPlatform`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_Publisher1`
    FOREIGN KEY (`idPublisher`)
    REFERENCES `gamer_nest`.`Publisher` (`idPublisher`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_Dev1`
    FOREIGN KEY (`idDev`)
    REFERENCES `gamer_nest`.`Dev` (`idDev`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Author` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Author` (
  `idAuthor` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(15) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `password` CHAR(60) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `phone` CHAR(9) NOT NULL,
  `description` VARCHAR(500) NOT NULL,
  `avatar` VARCHAR(200) NOT NULL,
  `birthday` DATE NOT NULL,
  `admin` BINARY NOT NULL DEFAULT 0,
  `permissionToPublish` BINARY NOT NULL DEFAULT 0,
  `creationDate` DATETIME NOT NULL,
  `isActive` BINARY NOT NULL DEFAULT 1,
  `deactivationDate` DATETIME NULL,
  PRIMARY KEY (`idAuthor`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Article`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Article` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Article` (
  `idArticle` INT NOT NULL AUTO_INCREMENT,
  `headline` VARCHAR(50) NOT NULL,
  `summary` VARCHAR(500) NOT NULL,
  `body` TEXT NOT NULL,
  `cover` VARCHAR(200) NOT NULL,
  `published` BINARY NOT NULL DEFAULT 0,
  `deactivated` BINARY NOT NULL DEFAULT 0,
  `createDate` DATETIME NOT NULL,
  `editedDate` DATETIME NULL,
  `isEdited` BINARY NOT NULL DEFAULT 0,
  `idAuthor` INT NOT NULL,
  PRIMARY KEY (`idArticle`),
  INDEX `fk_Article_Author1_idx` (`idAuthor` ASC) VISIBLE,
  CONSTRAINT `fk_Article_Author1`
    FOREIGN KEY (`idAuthor`)
    REFERENCES `gamer_nest`.`Author` (`idAuthor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`User` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`User` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(15) NOT NULL,
  `password` CHAR(60) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `avatar` VARCHAR(200) NOT NULL,
  `isConfirmed` BINARY NOT NULL DEFAULT 0,
  `token` VARCHAR(15) NULL,
  `isActive` BINARY NOT NULL DEFAULT 1,
  `birthday` DATE NOT NULL,
  `creationDate` DATETIME NOT NULL,
  `deletedDate` DATETIME NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Game_Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Game_Genre` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Game_Genre` (
  `idGame` INT NOT NULL,
  `idGenre` TINYINT NOT NULL,
  PRIMARY KEY (`idGame`, `idGenre`),
  INDEX `fk_Game_has_Genre_Genre2_idx` (`idGenre` ASC) VISIBLE,
  INDEX `fk_Game_has_Genre_Game2_idx` (`idGame` ASC) VISIBLE,
  CONSTRAINT `fk_Game_has_Genre_Game2`
    FOREIGN KEY (`idGame`)
    REFERENCES `gamer_nest`.`Game` (`idGame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Genre_Genre2`
    FOREIGN KEY (`idGenre`)
    REFERENCES `gamer_nest`.`Genre` (`idGenre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Game_Language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Game_Language` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Game_Language` (
  `idGame` INT NOT NULL,
  `idLanguage` INT NOT NULL,
  PRIMARY KEY (`idGame`, `idLanguage`),
  INDEX `fk_Game_has_Language1_Language1_idx` (`idLanguage` ASC) VISIBLE,
  INDEX `fk_Game_has_Language1_Game1_idx` (`idGame` ASC) VISIBLE,
  CONSTRAINT `fk_Game_has_Language1_Game1`
    FOREIGN KEY (`idGame`)
    REFERENCES `gamer_nest`.`Game` (`idGame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Language1_Language1`
    FOREIGN KEY (`idLanguage`)
    REFERENCES `gamer_nest`.`Language` (`idLanguage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Game_PlayerType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Game_PlayerType` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Game_PlayerType` (
  `idGame` INT NOT NULL,
  `idPlayerType` TINYINT NOT NULL,
  PRIMARY KEY (`idGame`, `idPlayerType`),
  INDEX `fk_Game_has_PlayerType1_PlayerType1_idx` (`idPlayerType` ASC) VISIBLE,
  INDEX `fk_Game_has_PlayerType1_Game1_idx` (`idGame` ASC) VISIBLE,
  CONSTRAINT `fk_Game_has_PlayerType1_Game1`
    FOREIGN KEY (`idGame`)
    REFERENCES `gamer_nest`.`Game` (`idGame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_PlayerType1_PlayerType1`
    FOREIGN KEY (`idPlayerType`)
    REFERENCES `gamer_nest`.`PlayerType` (`idPlayerType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`User_Fav_Game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`User_Fav_Game` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`User_Fav_Game` (
  `idGame` INT NOT NULL,
  `idUser` INT NOT NULL,
  PRIMARY KEY (`idGame`, `idUser`),
  INDEX `fk_Game_has_User_User1_idx` (`idUser` ASC) VISIBLE,
  INDEX `fk_Game_has_User_Game1_idx` (`idGame` ASC) VISIBLE,
  CONSTRAINT `fk_Game_has_User_Game1`
    FOREIGN KEY (`idGame`)
    REFERENCES `gamer_nest`.`Game` (`idGame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_User_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `gamer_nest`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`User_Score_Game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`User_Score_Game` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`User_Score_Game` (
  `Game_idGame` INT NOT NULL,
  `User_idUser` INT NOT NULL,
  `score` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`Game_idGame`, `User_idUser`, `score`),
  INDEX `fk_Game_has_User_User2_idx` (`User_idUser` ASC) VISIBLE,
  INDEX `fk_Game_has_User_Game2_idx` (`Game_idGame` ASC) VISIBLE,
  CONSTRAINT `fk_Game_has_User_Game2`
    FOREIGN KEY (`Game_idGame`)
    REFERENCES `gamer_nest`.`Game` (`idGame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_User_User2`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `gamer_nest`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`Game_Article`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`Game_Article` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`Game_Article` (
  `idArticle` INT NOT NULL,
  `idGame` INT NOT NULL,
  PRIMARY KEY (`idArticle`, `idGame`),
  INDEX `fk_Article_has_Game_Game1_idx` (`idGame` ASC) VISIBLE,
  INDEX `fk_Article_has_Game_Article1_idx` (`idArticle` ASC) VISIBLE,
  CONSTRAINT `fk_Article_has_Game_Article1`
    FOREIGN KEY (`idArticle`)
    REFERENCES `gamer_nest`.`Article` (`idArticle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Article_has_Game_Game1`
    FOREIGN KEY (`idGame`)
    REFERENCES `gamer_nest`.`Game` (`idGame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamer_nest`.`User_Article`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gamer_nest`.`User_Article` ;

CREATE TABLE IF NOT EXISTS `gamer_nest`.`User_Article` (
  `idUser` INT NOT NULL,
  `idArticle` INT NOT NULL,
  PRIMARY KEY (`idUser`, `idArticle`),
  INDEX `fk_User_has_Article_Article1_idx` (`idArticle` ASC) VISIBLE,
  INDEX `fk_User_has_Article_User1_idx` (`idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Article_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `gamer_nest`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Article_Article1`
    FOREIGN KEY (`idArticle`)
    REFERENCES `gamer_nest`.`Article` (`idArticle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

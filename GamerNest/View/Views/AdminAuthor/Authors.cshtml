@model Support.ModelList
@{
    ViewData["Title"] = "Admin - Authors";
}

<main class="home-section">
    <div class="text">
        <h1>Authors</h1>

        <h3>@ViewData[ "Description" ]</h3>

        @if ( ViewData[ "AdminType" ].ToString() == "Admin" )
        {
            <section class="filter">
                <h4>@ViewData[ "FilterTitle" ]:</h4>
                <form asp-controller="AdminAuthor" asp-action="Authors" method="get">
                    @if ( Model.authorList.Count > 0 )
                    {
                        <div>
                            <select id="orderBy" name="orderBy">
                                <option value="">@ViewData[ "fOrderBy" ]</option>
                                @foreach ( var prop in Model.authorList.First().GetType().GetProperties() )
                                {
                                    if ( prop.Name.ToLower() != "password" )
                                    {
                                        <option value="@prop.Name">@prop.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    }
                    <div>
                        <div class="input-group">
                            <span class="input-icon"><i class="fa-solid fa-magnifying-glass"></i></span>
                            <input type="number" id="id" name="id" pattern="[0-9]+" placeholder="@ViewData[ "fSearchId" ]">
                        </div>
                    </div>
                    <div>
                        <div class="input-group">
                            <span class="input-icon"><i class="fa-solid fa-magnifying-glass"></i></span>
                            <input type="text" id="name" name="name" pattern="[\p{L} '-.]+" placeholder="@ViewData[ "fSearchName" ]">
                        </div>
                    </div>
                    <div>
                        <div class="input-group">
                            <span class="input-icon"><i class="fa-solid fa-magnifying-glass"></i></span>
                            <input type="text" id="firstLastName" name="firstLastName" pattern="[\p{L} '-.]+" placeholder="@ViewData[ "fSearchLastName" ]">
                        </div>
                    </div>
                    <div>
                        <div class="input-group">
                            <span class="input-icon"><i class="fa-solid fa-magnifying-glass"></i></span>
                            <input type="text" id="secondLastName" name="secondLastName" pattern="[\p{L} '-.]+" placeholder="@ViewData[ "fSearchSecondLastName" ]">
                        </div>
                    </div>
                    <div>
                        <div class="input-group">
                            <span class="input-icon"><i class="fa-solid fa-magnifying-glass"></i></span>
                            <input type="email" id="email" name="email" placeholder="@ViewData[ "fSearchEmail" ]">
                        </div>
                    </div>
                    <div>
                        <select class="normalSelect" onchange="selectColor(this)" id="isAdmin" name="isAdmin">
                            <option class="normalSelect" value="">@ViewData[ "fIsAdmin" ]</option>
                            <option class="greenSelect" value="1">&#xf058;</option>
                            <option class="redSelect" value="0">&#xf057;</option>
                        </select>
                    </div>
                    <div>
                        <select class="normalSelect" onchange="selectColor(this)" id="isActive" name="isActive">
                            <option class="normalSelect" value="">@ViewData[ "fIsActive" ]</option>
                            <option class="greenSelect" value="1">&#xf058;</option>
                            <option class="redSelect" value="0">&#xf057;</option>
                        </select>
                    </div>
                    <div>
                        <input class="filtButton" type="submit" value="@ViewData[ "ButtonFilter" ]">
                    </div>


                </form>
            </section>

            <section class="create">
                <a asp-action="CreateForm" asp-controller="AdminAuthor">
                    <i class="fa-solid fa-plus"></i>
                    <span>@ViewData[ "ButtonNew" ]</span>
                </a>
            </section>

            <section class="adminTable">
                @if ( Model.authorList.Count > 0 )
                {
                    <table>
                        <tr>
                            <th>@ViewData[ "Actions" ]</th>
                            @foreach ( var prop in Model.authorList.First().GetType().GetProperties() )
                            {
                                // Exclude "Password" column from table
                                if ( prop.Name.ToLower() != "password" && prop.Name.ToLower() != "newpassword" && prop.Name.ToLower() != "confirmpassword" )
                                {
                                    <th>@prop.Name</th>
                                }
                            }
                        </tr>
                        @foreach ( var item in Model.authorList )
                        {
                            <tr>
                                <td>
                                    <!-- Delete Author -->
                                    <a id="deleteAction_@item.id" class="delete-action" onclick="deleteModal(@item.id, 'AdminAuthor')">
                                        <i class="fa-solid fa-trash-can"></i>
                                    </a>

                                    <!-- Edit Author -->
                                    <a asp-controller="AdminAuthor" asp-action="UpdateForm" asp-route-email="@item.email">
                                        <i class="fa-solid fa-pen"></i>
                                    </a>

                                    <!-- Modal -->
                                    <div id="confirmationModal_@item.id" class="modal">
                                        <div class="modal-content">
                                            <h2>Confirmation</h2>
                                            <p>Are you sure you want to delete this row with id: @item.id?</p>
                                            <div class="modal-actions">
                                                <button id="confirmBtn_@item.id" asp-controller="AdminAuthor" asp-action="Delete" asp-route-id="@item.id">Delete</button>
                                                <button id="cancelBtn_@item.id">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                @foreach ( var prop in item.GetType().GetProperties() )
                                {
                                    // Exclude "Password" column from table
                                    if ( prop.Name.ToLower() != "password" && prop.Name.ToLower() != "newpassword" && prop.Name.ToLower() != "confirmpassword" )
                                    {
                                        <td>
                                            @if ( prop.PropertyType == typeof( bool ) )
                                            {
                                                @if ( (bool) prop.GetValue( item ) )
                                                {
                                                    <i class="far fa-circle-check checkmark-icon"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-circle-xmark xmark-icon"></i>
                                                }
                                            }
                                            else if ( prop.PropertyType == typeof( string ) && ((string) prop.GetValue( item ))?.StartsWith( "/img/" ) == true )
                                            {
                                                <img class="image-cell" src="@prop.GetValue(item)" alt="Image">
                                            }
                                            else if ( prop.Name.ToLower() == "description" )
                                            {
                                                @Html.Raw(prop.GetValue(item))
                                                ;
                                            }
                                            else
                                            {
                                                var propValue = prop.GetValue(item)?.ToString();
                                                if ( !string.IsNullOrEmpty( propValue ) )
                                                {
                                                    if ( propValue == "ENG" )
                                                    {
                                                        <span class="fi fi-gb fis"></span>
                                                    }
                                                    else if ( propValue == "ESP" )
                                                    {
                                                        <span class="fi fi-es fis"></span>
                                                    }
                                                    else
                                                    {
                                                        @propValue
                                                    }
                                                }
                                            }
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    </table>
                }
                else
                {
                    <h4>@ViewData[ "NoData" ]</h4>
                }
            </section>

            <section class="pagination">
                <div>
                    @if ( Model.CurrentPage > 1 )
                    {
                        <!-- Previous Page -->
                        <a asp-controller="AdminAuthor" asp-action="Authors"
                   asp-route-page="@(Model.CurrentPage - 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-id="@ViewBag.FormData.id"
                   asp-route-name="@ViewBag.FormData.name"
                   asp-route-firstLastName="@ViewBag.FormData.firstLastName"
                   asp-route-secondLastName="@ViewBag.FormData.secondLastName"
                   asp-route-email="@ViewBag.FormData.email"
                   asp-route-isAdmin="@ViewBag.FormData.isAdmin"
                   asp-route-isActive="@ViewBag.FormData.isActive"
                   asp-route-orderBy="@ViewBag.FormData.orderBy">
                            @ViewData[ "ButtonPrevious" ]
                        </a>
                    }

                    @if ( Model.CurrentPage < Math.Ceiling( (double) Model.TotalItems / Model.PageSize ) )
                    {
                        <!-- Next Page -->
                        <a asp-controller="AdminAuthor" asp-action="Authors"
                   asp-route-page="@(Model.CurrentPage + 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-id="@ViewBag.FormData.id"
                   asp-route-name="@ViewBag.FormData.name"
                   asp-route-firstLastName="@ViewBag.FormData.firstLastName"
                   asp-route-secondLastName="@ViewBag.FormData.secondLastName"
                   asp-route-email="@ViewBag.FormData.email"
                   asp-route-isAdmin="@ViewBag.FormData.isAdmin"
                   asp-route-isActive="@ViewBag.FormData.isActive"
                   asp-route-orderBy="@ViewBag.FormData.orderBy">
                            @ViewData[ "ButtonNext" ]
                        </a>
                    }
                </div>
                <div>
                    <p>
                        @ViewData[ "Page" ] @Model.CurrentPage @ViewData[ "Of" ] @Math.Ceiling((double)Model.TotalItems / Model.PageSize) (@Model.authorList.Count @ViewData[ "OutOf" ] @Model.TotalItems)
                    </p>
                </div>
            </section>
        }
        else
        {
            <section class="adminTable">
                @if ( Model.authorList.Count > 0 )
                {
                    <table>
                        <tr>
                            <th>@ViewData[ "Actions" ]</th>
                            @foreach ( var prop in Model.authorList.First().GetType().GetProperties() )
                            {
                                // Exclude "Password" column from table
                                if ( prop.Name.ToLower() != "password" && prop.Name.ToLower() != "newpassword" && prop.Name.ToLower() != "confirmpassword" )
                                {
                                    <th>@prop.Name</th>
                                }
                            }
                        </tr>
                        @foreach ( var item in Model.authorList )
                        {
                            <tr>
                                <td>
                                    <!-- Edit Author -->
                                    <a asp-controller="AdminAuthor" asp-action="UpdateForm" asp-route-email="@item.email">
                                        <i class="fa-solid fa-pen"></i>
                                    </a>
                                </td>
                                @foreach ( var prop in item.GetType().GetProperties() )
                                {
                                    // Exclude "Password" column from table
                                    if ( prop.Name.ToLower() != "password" && prop.Name.ToLower() != "newpassword" && prop.Name.ToLower() != "confirmpassword" )
                                    {
                                        <td>
                                            @if ( prop.PropertyType == typeof( bool ) )
                                            {
                                                @if ( (bool) prop.GetValue( item ) )
                                                {
                                                    <i class="far fa-circle-check checkmark-icon"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-circle-xmark xmark-icon"></i>
                                                }
                                            }
                                            else if ( prop.PropertyType == typeof( string ) && ((string) prop.GetValue( item ))?.StartsWith( "/img/" ) == true )
                                            {
                                                <img class="image-cell" src="@prop.GetValue(item)" alt="Image">
                                            }
                                            else if ( prop.Name.ToLower() == "description" )
                                            {
                                                @Html.Raw(prop.GetValue(item))
                                                ;
                                            }
                                            else
                                            {
                                                var propValue = prop.GetValue(item)?.ToString();
                                                if ( !string.IsNullOrEmpty( propValue ) )
                                                {
                                                    if ( propValue == "ENG" )
                                                    {
                                                        <span class="fi fi-gb fis"></span>
                                                    }
                                                    else if ( propValue == "ESP" )
                                                    {
                                                        <span class="fi fi-es fis"></span>
                                                    }
                                                    else
                                                    {
                                                        @propValue
                                                    }
                                                }
                                            }
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    </table>
                }
                else
                {
                    <h4>@ViewData[ "NoData" ]</h4>
                }
            </section>
        }
        
    </div>
</main>